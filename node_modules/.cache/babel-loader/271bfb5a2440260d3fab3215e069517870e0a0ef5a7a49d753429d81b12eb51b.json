{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-Root\\\\code-editor\\\\src\\\\components\\\\Editor.jsx\";\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport { Controlled } from 'react-codemirror2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Editor = props => {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props;\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-title\",\n        children: [displayName, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"o/c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controlled\n      // onBeforeChange={handleChange}\n      //  value={value}\n      //  className='code-mirror-wrapper'\n      , {\n        options: {\n          // lineWrapping: true,\n          // lint: true,\n          // mode: language,\n          theme: \"material\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","Controlled","Editor","props","language","displayName","value","onChange","handleChange","editor","data","theme"],"sources":["E:/React-Root/code-editor/src/components/Editor.jsx"],"sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport {Controlled } from 'react-codemirror2'\r\n\r\n\r\n\r\n\r\n\r\nconst Editor = (props) => {\r\n    const{\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n\r\n    } = props\r\n\r\n    function handleChange(editor, data,value) {\r\n        onChange(value)\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"editor-container\">\r\n        <div className=\"editor-title\">\r\n            {displayName}\r\n            <button>o/c</button>\r\n        </div>\r\n        <Controlled\r\n        // onBeforeChange={handleChange}\r\n        //  value={value}\r\n        //  className='code-mirror-wrapper'\r\n         options={{\r\n            // lineWrapping: true,\r\n            // lint: true,\r\n            // mode: language,\r\n            theme: \"material\",\r\n         }}\r\n        />\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Editor"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,OAAO,yBAAyB;AAChC,OAAO,uCAAuC;AAC9C,OAAO,yBAAyB;AAChC,SAAQC,UAAU,QAAQ,mBAAmB;AAAA;AAAA;AAM7C,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACtB,MAAK;IACDC,QAAQ;IACRC,WAAW;IACXC,KAAK;IACLC;EAEJ,CAAC,GAAGJ,KAAK;EAET,SAASK,YAAY,CAACC,MAAM,EAAEC,IAAI,EAACJ,KAAK,EAAE;IACtCC,QAAQ,CAACD,KAAK,CAAC;EACnB;EAEF,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC7B;QAAK,SAAS,EAAC,cAAc;QAAA,WACxBD,WAAW,eACZ;UAAA,UAAQ;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAClB,eACN,QAAC;MACD;MACA;MACA;MAAA;QACC,OAAO,EAAE;UACN;UACA;UACA;UACAM,KAAK,EAAE;QACV;MAAE;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EACA,iBACH;AAEP,CAAC;AAAA,KAlCKT,MAAM;AAoCZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}